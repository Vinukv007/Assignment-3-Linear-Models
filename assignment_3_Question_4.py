# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sM9a6G7pN-QQU5aL4iH9BJZoQmeAVyB0

### 4. Predict the price of an Airbnb listing

---
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
import re

df=pd.read_csv('airbnb_listing_train.csv')
df.head()

df.columns

df.isna().sum()

df.drop(['id', 'name', 'host_id','neighbourhood_group','number_of_reviews', 'last_review', 'reviews_per_month'],1,inplace=True)

df.dropna(inplace=True)

df.isna().sum()

df.dtypes

from sklearn.preprocessing import OrdinalEncoder

host=list(df.groupby('host_name').mean().sort_values(by='price').reset_index()['host_name'])
host_dict=dict(zip(host,[i for i in range(len(host)+1)]))
df['host_name']=df['host_name'].map(host_dict)

neighbour=list(df.groupby('neighbourhood').mean().sort_values(by='price').reset_index()['neighbourhood'])
neighbour_dict=dict(zip(neighbour,[i for i in range(len(neighbour)+1)]))
df['neighbourhood']=df['neighbourhood'].map(neighbour_dict)

room=list(df.groupby('room_type').mean().sort_values(by='price').reset_index()['room_type'])
room_dict=dict(zip(room,[i for i in range(len(room)+1)]))
df['room_type']=df['room_type'].map(room_dict)

df.dtypes

from sklearn.preprocessing import MinMaxScaler
mm=MinMaxScaler()
df[['host_name', 'neighbourhood', 'room_type',
       'minimum_nights', 'calculated_host_listings_count', 'availability_365']]=mm.fit_transform(df[['host_name', 'neighbourhood', 'room_type',
       'minimum_nights', 'calculated_host_listings_count', 'availability_365']])

x=df.drop('price',1)
y=df.price

df.corr()['price']

from sklearn.linear_model import LinearRegression,LogisticRegression,Lasso,Ridge
lr=LinearRegression()
lg=LogisticRegression()
lasso=Lasso()
ridge=Ridge()

lr.fit(x,y)
lr.score(x,y)

lg.fit(x,y)
lg.score(x,y)

lasso.fit(x,y)
lasso.score(x,y)

ridge.fit(x,y)
ridge.score(x,y)

dftest=pd.read_csv('airbnb_listing_validate.csv')
dftest.head()

dftest.columns

dftest.drop_duplicates(inplace=True)
dftest.drop(['name', 'host_id','neighbourhood_group','number_of_reviews', 'last_review', 'reviews_per_month'],1,inplace=True)
dftest.dropna(inplace=True)

dftest.isna().sum()

dftest['host_name']=dftest['host_name'].map(host_dict)
dftest['neighbourhood']=dftest['neighbourhood'].map(neighbour_dict)
dftest['room_type']=dftest['room_type'].map(room_dict)

dftest.head()

from sklearn.preprocessing import MinMaxScaler
mm=MinMaxScaler()
dftest[['host_name', 'neighbourhood', 'room_type',
       'minimum_nights', 'calculated_host_listings_count', 'availability_365']]=mm.fit_transform(dftest[['host_name', 'neighbourhood', 'room_type',
       'minimum_nights', 'calculated_host_listings_count', 'availability_365']])

dftest['host_name'].fillna(dftest['host_name'].mode()[0],inplace=True)

dftest.isna().sum()

dftest['price']=lr.predict(dftest.drop('id',1))

output=dftest[['id','price']]
output.to_csv('output.csv')

